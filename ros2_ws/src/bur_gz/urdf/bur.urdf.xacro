<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="bur">

  <!-- Arguments -->
  <xacro:arg name="namespace" default="bur"/>

  <xacro:arg name="simulation" default="true"/>
  <xacro:arg name="density" default="1000"/>

  <xacro:property name="ns" value="$(arg namespace)"/>
  <xacro:property name="density" value="$(arg density)"/>

  <!-- Import modules -->
  <xacro:include filename="helpers.urdf.xacro"/>
  <xacro:include filename="colors.urdf.xacro"/>
  <xacro:include filename="thruster.urdf.xacro"/>

  <!-- Dimensions -->
  <xacro:property name="x_size" value="0.40"/>
  <xacro:property name="y_size" value="0.80"/>
  <xacro:property name="z_size" value="0.20"/>

  <xacro:property name="mass" value="14.8"/>

  <xacro:property name="prop_mass" value="0.07"/>

  <xacro:property name="prop_mass" value="0.07"/>

  <!-- to set correct buoyancy volume with 1 % positive factor -->
  <xacro:property name="buoyant_correction" value="${1.01*pow((mass + 6*prop_mass)/(density*x_size*y_size*z_size), 1./3)}"/>
  <!-- Center of buoyancy -->
  <xacro:property name="z_cob" value="${-buoyant_correction*z_size/4}"/>
  <!-- Center of gravity -->
  <xacro:property name="z_cog" value="${-buoyant_correction*z_size}"/>

  <!-- link name="${ns}/base_link" -->
  <link name="base_link">
    <inertial>
      <mass value="${mass}"/>
      <origin xyz="0 0 ${z_cog}"/>

      <!-- BlueROV2 values from "Model Predictive Control for the BlueROV2",
           Emil MÃ¡r Einarsson, Andris Lipenitis, Master thesis, 2020
           for now make Ignition crash?-->
      <!--         <inertia ixx="0.21" ixy="0.00" ixz="0.00" iyy="0.245" iyz="0.00" izz="0.245"/> -->
      <inertia ixx="5.2539" ixy="0.0144" ixz="0.3341" iyy="7.9420" iyz="0.026" izz="6.9123"/>

      <!-- Perfect rectangle -->
      <!--        <inertia
           ixx="${mass/12*(y_size*y_size+z_size*z_size)}" ixy="0.0" ixz="0.0"
           iyy="${mass/12*(x_size*x_size + z_size*z_size)}" iyz="0.0"
           izz="${mass/12*(x_size*x_size + y_size*y_size)}" />-->
    </inertial>
    <visual>
      <geometry>
        <box size="${x_size*buoyant_correction} ${y_size*buoyant_correction} ${z_size*buoyant_correction}"/>
      </geometry>
      <material name="grey"/>
    </visual>

    <collision>
      <origin xyz="0 0 ${z_cob}"/>
      <!-- Box adjusted for buoyancy -->
      <geometry>
        <box size="${x_size*buoyant_correction} ${y_size*buoyant_correction} ${z_size*buoyant_correction}"/>
      </geometry>
    </collision>

    <!--    <gazebo>
         <velocity_decay>
         <linear>-250.15 -70.364 -170.955</linear>
         <angular>1.888 0.761 3.744</angular>
         </velocity_decay>
         </gazebo>-->

  </link>

  <xacro:thruster thruster_id="1">
    <origin xyz="0.1555 -0.15 -0.0725" rpy="0 0 0.7853981634"/>
  </xacro:thruster>
  <xacro:thruster thruster_id="2">
    <origin xyz="0.1555 0.15 -0.0725" rpy="0 0 0.7853981634"/>
  </xacro:thruster>
  <xacro:thruster thruster_id="3">
    <origin xyz="-0.1555 -0.15 -0.0725" rpy="0 0 0.7853981634"/>
  </xacro:thruster>
  <xacro:thruster thruster_id="4">
    <origin xyz="-0.1555 0.15 -0.0725" rpy="0 0 0.7853981634"/>
  </xacro:thruster>

  <xacro:thruster thruster_id="5">
    <origin xyz="${x_size / 3} ${-y_size / 3} 0" rpy="${-pi/4} ${pi/2} 0"/>
  </xacro:thruster>
  <xacro:thruster thruster_id="6">
    <origin xyz="${x_size / 3} ${y_size / 3} 0" rpy="${pi/4} ${pi/2} 0"/>
  </xacro:thruster>
  <xacro:thruster thruster_id="7">
    <origin xyz="${-x_size / 3} ${-y_size / 3} 0" rpy="${pi/4} ${pi/2} 0"/>
  </xacro:thruster>
  <xacro:thruster thruster_id="8">
    <origin xyz="${-x_size / 3} ${y_size / 3} 0" rpy="${-pi/4} ${pi/2} 0"/>
  </xacro:thruster>

</robot>
